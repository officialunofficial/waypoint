# Configuration for git-cliff changelog generator
# See https://github.com/orhun/git-cliff

[changelog]
# The header of the changelog
header = """
# Changelog

All notable changes to Waypoint will be documented in this file.

"""
# Template for the changelog body
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first | trim_end_matches(pat=".") }}
    {%- endfor %}
{% endfor %}

"""
# Remove the leading and trailing whitespace from the template
trim = true
# Template for the changelog footer
footer = ""

# Git commit processing configuration
[git]
# Use conventional commits format
conventional_commits = true
# Filter commits
filter_unconventional = false
# Split the body by newlines
split_commits = false
# Protect breaking changes from being skipped
protect_breaking_commits = false
# Tag pattern
tag_pattern = "v[0-9].*"
# Skip tags matching this pattern
skip_tags = "v0.1.[0-9]"
# Sort commits inside sections by oldest/newest
sort_commits = "oldest"
# Commit parsers for grouping
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactor" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps", group = "Dependencies" },
    { message = "^chore", group = "Miscellaneous Tasks" },
    { message = "^ci", group = "Continuous Integration" },
    { message = "^build", group = "Build System" },
]
# Process each fixup commit
process_each_fixup_commit = false
# Filter out the commits that are not conventional
filter_commits = true
# Process merge commits
link_parsers = []
# Sort the tags topologically
topo_order = false